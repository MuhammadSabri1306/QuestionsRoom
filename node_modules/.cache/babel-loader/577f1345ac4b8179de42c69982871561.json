{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.replace-all.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from \"./services/firebase.js\";\nimport urlParams from \"./services/url-params.js\";\nimport PanelUser from \"./components/PanelUser.vue\";\nimport PanelForum from \"./components/PanelForum.vue\";\nimport FormNewRoom from \"./components/FormNewRoom.vue\";\nexport default {\n  name: \"App\",\n  components: {\n    PanelUser: PanelUser,\n    PanelForum: PanelForum,\n    FormNewRoom: FormNewRoom\n  },\n  data: function data() {\n    return {\n      hasRoom: false,\n      loginStatus: \"\",\n      room: {\n        id: \"\",\n        name: \"\"\n      },\n      loggedUser: {\n        userId: \"\",\n        isAdmin: false,\n        username: \"\",\n        email: \"\"\n      },\n      questions: []\n    };\n  },\n  methods: {\n    setData: function setData(data) {\n      this.room = data.room;\n      this.loggedUser = data.loggedUser;\n      this.questions = data.questions;\n    },\n    getData: function getData() {\n      return {\n        room: this.room,\n        loggedUser: this.loggedUser,\n        questions: this.questions\n      };\n    },\n    setHasRoom: function setHasRoom(val) {\n      this.hasRoom = Boolean(val);\n    },\n    login: function login() {\n      var _this = this;\n\n      firebase.login(function (user) {\n        _this.loggedUser.userId = user.uid;\n        _this.loggedUser.username = user.displayName.replaceAll(\" \", \"_\");\n        _this.loggedUser.email = user.email;\n        _this.loginStatus = \"valid\";\n      });\n    },\n    newRoom: function newRoom(params) {\n      var data = firebase.newRoom(params);\n      this.setData(data);\n      urlParams.set(\"room\", data.room.id);\n      this.hasRoom = true;\n    },\n    closeRoom: function closeRoom() {\n      var data = firebase.deleteRoom();\n      this.setData(data);\n      urlParams.delete(\"room\");\n      this.hasRoom = false;\n    },\n    toggleAdminMode: function toggleAdminMode() {\n      this.loggedUser.isAdmin = !this.loggedUser.isAdmin;\n    },\n    changeUsername: function changeUsername(username, userId) {\n      firebase.changeUsername(this.getData(), username, userId, this.setData);\n      console.log(this.getData().questions);\n    },\n    changeEmail: function changeEmail(email, userId) {\n      firebase.changeEmail(this.getData(), email, userId, this.setData);\n    },\n    addQuestion: function addQuestion(question) {\n      if (this.loggedUser.username.length < 1) this.loggedUser.username = \"Anonymous\";\n      firebase.pushQuestion(this.getData(), this.loggedUser.username, this.loggedUser.userId, question, this.setData);\n    },\n    test: function test() {\n      alert(\"Test success!\");\n    }\n  },\n  mounted: function mounted() {\n    var roomId = urlParams.get(\"room\");\n    this.hasRoom = roomId != null; //sementara\n\n    /*if(roomId != null){\r\n    \tfirebase.isRoomExists(this.setHasRoom)\r\n    }*/\n\n    if (this.hasRoom && this.loggedUser.email.length < 1) {\n      this.loggedUser.username = \"Anonymous\";\n\n      var idGen = function idGen() {\n        return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n      };\n\n      this.loggedUser.userId = idGen() + idGen() + \"-\" + idGen() + idGen() + idGen() + idGen();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAWA;AACA;AAEA;AACA;AACA;AAEA;AACAA,aADA;AAEAC;AACAC,wBADA;AAEAC,0BAFA;AAGAC;AAHA,GAFA;AAOAC,MAPA,kBAOA;AACA;AACAC,oBADA;AAEAC,qBAFA;AAGAC;AACAC,cADA;AAEAT;AAFA,OAHA;AAOAU;AACAC,kBADA;AAEAC,sBAFA;AAGAC,oBAHA;AAIAC;AAJA,OAPA;AAaAC;AAbA;AAeA,GAvBA;AAwBAC;AACAC,WADA,mBACAZ,IADA,EACA;AACA;AACA;AACA;AACA,KALA;AAMAa,WANA,qBAMA;AACA;AACAV,uBADA;AAEAE,mCAFA;AAGAK;AAHA;AAKA,KAZA;AAaAI,cAbA,sBAaAC,GAbA,EAaA;AACA;AACA,KAfA;AAgBAC,SAhBA,mBAgBA;AAAA;;AACAC;AACA;AACA;AACA;AACA;AACA,OALA;AAMA,KAvBA;AAwBAC,WAxBA,mBAwBAC,MAxBA,EAwBA;AACA;AACA;AACAC;AACA;AACA,KA7BA;AA8BAC,aA9BA,uBA8BA;AACA;AACA;AACAD;AACA;AACA,KAnCA;AAoCAE,mBApCA,6BAoCA;AACA;AACA,KAtCA;AAuCAC,kBAvCA,0BAuCAf,QAvCA,EAuCAF,MAvCA,EAuCA;AACAW;AACAO;AACA,KA1CA;AA2CAC,eA3CA,uBA2CAhB,KA3CA,EA2CAH,MA3CA,EA2CA;AACAW;AACA,KA7CA;AA8CAS,eA9CA,uBA8CAC,QA9CA,EA8CA;AACA;AACAV;AACA,KAjDA;AAkDAW,QAlDA,kBAkDA;AACAC;AACA;AApDA,GAxBA;AA8EAC,SA9EA,qBA8EA;AACA;AACA,kCAFA,CAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA;AAAA;;AACA;AACA;AACA;AA5FA","names":["name","components","PanelUser","PanelForum","FormNewRoom","data","hasRoom","loginStatus","room","id","loggedUser","userId","isAdmin","username","email","questions","methods","setData","getData","setHasRoom","val","login","firebase","newRoom","params","urlParams","closeRoom","toggleAdminMode","changeUsername","console","changeEmail","addQuestion","question","test","alert","mounted"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\r\n\t<div id=\"app\" class=\"container-lg\">\r\n\t\t<div v-if=\"hasRoom\" class=\"panel-wrapper\">\r\n\t\t\t<PanelUser :userId=\"loggedUser.userId\" :isAdmin=\"loggedUser.isAdmin\" :username=\"loggedUser.username\" :email=\"loggedUser.email\" />\r\n\t\t\t<PanelForum :forumName=\"room.name\" :questions=\"questions\" :loggedUserId=\"loggedUser.userId\" />\r\n\t\t</div>\r\n\t\t<FormNewRoom v-if=\"!hasRoom\" :userId=\"loggedUser.userId\" :username=\"loggedUser.username\" :email=\"loggedUser.email\" :loginStatus=\"loginStatus\"></FormNewRoom>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport firebase from \"./services/firebase.js\";\r\nimport urlParams from \"./services/url-params.js\";\r\n\r\nimport PanelUser from \"./components/PanelUser.vue\";\r\nimport PanelForum from \"./components/PanelForum.vue\";\r\nimport FormNewRoom from \"./components/FormNewRoom.vue\";\r\n\r\nexport default {\r\n\tname: \"App\",\r\n\tcomponents: {\r\n\t\tPanelUser,\r\n\t\tPanelForum,\r\n\t\tFormNewRoom\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\thasRoom: false,\r\n\t\t\tloginStatus: \"\",\r\n\t\t\troom: {\r\n\t\t\t\tid: \"\",\r\n\t\t\t\tname: \"\"\r\n\t\t\t},\r\n\t\t\tloggedUser: {\r\n\t\t\t\tuserId: \"\",\r\n\t\t\t\tisAdmin: false,\r\n\t\t\t\tusername: \"\",\r\n\t\t\t\temail: \"\"\r\n\t\t\t},\r\n\t\t\tquestions: []\r\n\t\t};\r\n\t},\r\n\tmethods: {\r\n\t\tsetData(data){\r\n\t\t\tthis.room = data.room;\r\n\t\t\tthis.loggedUser = data.loggedUser;\r\n\t\t\tthis.questions = data.questions;\r\n\t\t},\r\n\t\tgetData(){\r\n\t\t\treturn {\r\n\t\t\t\troom: this.room,\r\n\t\t\t\tloggedUser: this.loggedUser,\r\n\t\t\t\tquestions: this.questions\r\n\t\t\t};\r\n\t\t},\r\n\t\tsetHasRoom(val){\r\n\t\t\tthis.hasRoom = Boolean(val);\r\n\t\t},\r\n\t\tlogin(){\r\n\t\t\tfirebase.login(user => {\r\n\t\t\t\tthis.loggedUser.userId = user.uid;\r\n\t\t\t\tthis.loggedUser.username = user.displayName.replaceAll(\" \", \"_\");\r\n\t\t\t\tthis.loggedUser.email = user.email;\r\n\t\t\t\tthis.loginStatus = \"valid\";\r\n\t\t\t});\r\n\t\t},\r\n\t\tnewRoom(params){\r\n\t\t\tconst data = firebase.newRoom(params);\r\n\t\t\tthis.setData(data);\r\n\t\t\turlParams.set(\"room\", data.room.id);\r\n\t\t\tthis.hasRoom = true;\r\n\t\t},\r\n\t\tcloseRoom(){\r\n\t\t\tconst data = firebase.deleteRoom();\r\n\t\t\tthis.setData(data);\r\n\t\t\turlParams.delete(\"room\");\r\n\t\t\tthis.hasRoom = false;\r\n\t\t},\r\n\t\ttoggleAdminMode(){\r\n\t\t\tthis.loggedUser.isAdmin = !this.loggedUser.isAdmin;\r\n\t\t},\r\n\t\tchangeUsername(username, userId){\r\n\t\t\tfirebase.changeUsername(this.getData(), username, userId, this.setData);\r\n\t\t\tconsole.log(this.getData().questions);\r\n\t\t},\r\n\t\tchangeEmail(email, userId){\r\n\t\t\tfirebase.changeEmail(this.getData(), email, userId, this.setData);\r\n\t\t},\r\n\t\taddQuestion(question){\r\n\t\t\tif(this.loggedUser.username.length < 1) this.loggedUser.username = \"Anonymous\";\r\n\t\t\tfirebase.pushQuestion(this.getData(), this.loggedUser.username, this.loggedUser.userId, question, this.setData);\r\n\t\t},\r\n\t\ttest(){\r\n\t\t\talert(\"Test success!\");\r\n\t\t}\r\n\t},\r\n\tmounted(){\r\n\t\tconst roomId = urlParams.get(\"room\");\r\n\t\tthis.hasRoom = roomId != null; //sementara\r\n\t\t\r\n\t\t/*if(roomId != null){\r\n\t\t\tfirebase.isRoomExists(this.setHasRoom)\r\n\t\t}*/\r\n\r\n\t\tif(this.hasRoom && this.loggedUser.email.length < 1){\r\n\t\t\tthis.loggedUser.username = \"Anonymous\";\r\n\r\n\t\t\tconst idGen = () => (((1 + Math.random()) * 0x10000)|0).toString(16).substring(1);\r\n\t\t\tthis.loggedUser.userId = idGen() + idGen() + \"-\" + idGen() + idGen() + idGen() + idGen();\r\n\t\t}\r\n\t}\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}