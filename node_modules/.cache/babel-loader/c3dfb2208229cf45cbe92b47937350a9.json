{"ast":null,"code":"import _slicedToArray from \"F:/Dev/VueProjects/questions-room/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, signOut, GoogleAuthProvider } from \"firebase/auth\";\nimport { getDatabase, ref, push, set, update, onValue, onChildRemoved } from \"firebase/database\";\nimport firebaseConfig from \"./firebase-config\";\ninitializeApp(firebaseConfig);\n\nvar dateToTimeString = function dateToTimeString(date) {\n  var hours = date.getHours().toString(),\n      minutes = date.getMinutes().toString();\n  if (hours.length < 2) hours = \"0\" + hours;\n  if (minutes.length < 2) minutes = \"0\" + minutes;\n  return hours + \".\" + minutes;\n};\n\nvar getMainRef = function getMainRef(path) {\n  var db = getDatabase();\n  return ref(db, path);\n};\n\nvar login = function login(callback) {\n  var provider = new GoogleAuthProvider(),\n      auth = getAuth();\n  provider.setCustomParameters({\n    prompt: \"select_account\"\n  });\n  signInWithPopup(auth, provider).then(function (result) {\n    return callback(result.user);\n  }).catch(function (error) {\n    return console.error(\"Error Code: \".concat(error.code, \"\\n\").concat(error.message));\n  });\n};\n\nvar logout = function logout(callback) {\n  var auth = getAuth();\n  signOut(auth).then(callback);\n};\n\nvar newRoom = function newRoom(roomName, callback) {\n  var newRoomRef = push(getMainRef(\"rooms\"));\n  var value = {\n    roomId: newRoomRef.key,\n    roomName: roomName\n  };\n  set(newRoomRef, {\n    roomName: roomName\n  }).then(function () {\n    return callback(value);\n  }).catch(function (error) {\n    return console.log(\"Firebase error code: \".concat(error.code, \"\\n\").concat(error.message));\n  });\n};\n\nvar deleteRoom = function deleteRoom(roomId) {\n  var delRoomRef = getMainRef(\"rooms/\" + roomId);\n  set(delRoomRef, null);\n};\n\nvar pushQuestion = function pushQuestion(roomId, userId, username, content) {\n  var newQuestionRef = push(getMainRef(\"rooms/\".concat(roomId, \"/questions\")));\n  var time = Date.now();\n  set(newQuestionRef, {\n    userId: userId,\n    username: username,\n    content: content,\n    time: time\n  });\n};\n\nvar delQuestion = function delQuestion(roomId, questionKey) {\n  var delQuestionRef = getMainRef(\"rooms/\".concat(roomId, \"/questions/\").concat(questionKey));\n  set(delQuestionRef, null);\n};\n\nvar addUsersHandsUp = function addUsersHandsUp(roomId, questionKey, userId) {\n  var newUsersHandsUpRef = push(getMainRef(\"rooms/\".concat(roomId, \"/questions/\").concat(questionKey, \"/usersHandsUp\")));\n  set(newUsersHandsUpRef, userId);\n};\n\nvar removeUsersHandsUp = function removeUsersHandsUp(roomId, questionKey, usersHandsUpKey) {\n  var delUsersHandsUpRef = getMainRef(\"rooms/\".concat(roomId, \"/questions/\").concat(questionKey, \"/usersHandsUp/\").concat(usersHandsUpKey));\n  set(delUsersHandsUpRef, null);\n};\n\nvar changeUsername = function changeUsername(roomId, questionsKey, username, callback) {\n  var roomsRef = getMainRef(\"rooms/\" + roomId);\n  var updates = {};\n  questionsKey.forEach(function (questionKey) {\n    updates[\"/questions/\" + questionKey + \"/username\"] = username;\n  });\n  update(roomsRef, updates).then(function () {\n    callback();\n  });\n};\n\nvar loadAllQuestion = function loadAllQuestion(roomId, callback) {\n  var roomsRef = getMainRef(\"rooms/\" + roomId + \"/questions\");\n  onValue(roomsRef, function (snapshot) {\n    var questions = [];\n    snapshot.forEach(function (childSnapshot) {\n      var key = childSnapshot.key;\n\n      var _childSnapshot$val = childSnapshot.val(),\n          userId = _childSnapshot$val.userId,\n          username = _childSnapshot$val.username,\n          content = _childSnapshot$val.content,\n          usersHandsUp = _childSnapshot$val.usersHandsUp,\n          time = _childSnapshot$val.time;\n\n      var tempArr = [];\n      if (usersHandsUp) Object.entries(usersHandsUp).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            userId = _ref2[1];\n\n        return tempArr.push({\n          key: key,\n          userId: userId\n        });\n      });\n      usersHandsUp = tempArr;\n      var timeObj = new Date(time);\n      time = dateToTimeString(timeObj);\n      questions.push({\n        key: key,\n        userId: userId,\n        username: username,\n        content: content,\n        usersHandsUp: usersHandsUp,\n        time: time\n      });\n    });\n\n    var onRoomDeleted = function onRoomDeleted(roomId, callback) {\n      var roomsRef = getMainRef(\"rooms\");\n      onChildRemoved(roomsRef, function (snapshot) {\n        if (snapshot.key == roomId) callback();\n      });\n    };\n\n    callback({\n      questions: questions,\n      onRoomDeleted: onRoomDeleted\n    });\n  });\n};\n/*const events = {\r\n\tonRoomDeleted: (roomId, callback) => {\r\n\t\tconst roomsRef = getMainRef(\"rooms\");\r\n\t\tonChildRemoved(roomsRef, snapshot => {\r\n\t\t\tif(snapshot.key == roomId) callback();\r\n\t\t})\r\n\t}\r\n};*/\n\n\nexport default {\n  login: login,\n  logout: logout,\n  newRoom: newRoom,\n  deleteRoom: deleteRoom,\n  loadAllQuestion: loadAllQuestion,\n  pushQuestion: pushQuestion,\n  addUsersHandsUp: addUsersHandsUp,\n  removeUsersHandsUp: removeUsersHandsUp,\n  changeUsername: changeUsername\n};","map":{"version":3,"sources":["F:/Dev/VueProjects/questions-room/src/services/firebase.js"],"names":["initializeApp","getAuth","signInWithPopup","signOut","GoogleAuthProvider","getDatabase","ref","push","set","update","onValue","onChildRemoved","firebaseConfig","dateToTimeString","date","hours","getHours","toString","minutes","getMinutes","length","getMainRef","path","db","login","callback","provider","auth","setCustomParameters","prompt","then","result","user","catch","error","console","code","message","logout","newRoom","roomName","newRoomRef","value","roomId","key","log","deleteRoom","delRoomRef","pushQuestion","userId","username","content","newQuestionRef","time","Date","now","delQuestion","questionKey","delQuestionRef","addUsersHandsUp","newUsersHandsUpRef","removeUsersHandsUp","usersHandsUpKey","delUsersHandsUpRef","changeUsername","questionsKey","roomsRef","updates","forEach","loadAllQuestion","snapshot","questions","childSnapshot","val","usersHandsUp","tempArr","Object","entries","timeObj","onRoomDeleted"],"mappings":"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","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth, signInWithPopup, signOut, GoogleAuthProvider } from \"firebase/auth\";\r\nimport { getDatabase, ref, push, set, update, onValue, onChildRemoved } from \"firebase/database\";\r\nimport firebaseConfig from \"./firebase-config\";\r\n\r\ninitializeApp(firebaseConfig);\r\n\r\nconst dateToTimeString = date => {\r\n\tlet hours = date.getHours().toString(),\r\n\t\tminutes = date.getMinutes().toString();\r\n\r\n\tif(hours.length < 2) hours = \"0\" + hours;\r\n\tif(minutes.length < 2) minutes = \"0\" + minutes;\r\n\r\n\treturn hours + \".\" + minutes;\r\n};\r\n\r\nconst getMainRef = path => {\r\n\tconst db = getDatabase();\r\n\treturn ref(db, path);\r\n};\r\n\r\nconst login = callback => {\r\n\tconst provider = new GoogleAuthProvider(),\r\n\t\tauth = getAuth();\r\n\r\n\tprovider.setCustomParameters({\r\n\t\tprompt: \"select_account\"\r\n\t});\r\n\r\n\tsignInWithPopup(auth, provider)\r\n\t\t.then(result => callback(result.user))\r\n\t\t.catch(error => console.error(`Error Code: ${error.code}\\n${error.message}`));\r\n};\r\n\r\nconst logout = callback => {\r\n\tconst auth = getAuth();\r\n\tsignOut(auth).then(callback);\r\n};\r\n\r\nconst newRoom = (roomName, callback) => {\r\n\tconst newRoomRef = push(getMainRef(\"rooms\"));\r\n\tconst value = { roomId: newRoomRef.key, roomName };\r\n\r\n\tset(newRoomRef, { roomName })\r\n\t\t.then(() => callback(value))\r\n\t\t.catch(error => console.log(`Firebase error code: ${error.code}\\n${error.message}`));\r\n\t\t\t\r\n};\r\n\r\nconst deleteRoom = roomId => {\r\n\tconst delRoomRef = getMainRef(\"rooms/\" + roomId);\r\n\tset(delRoomRef, null);\r\n};\r\n\r\nconst pushQuestion = (roomId, userId, username, content) => {\r\n\tconst newQuestionRef = push(getMainRef(`rooms/${roomId}/questions`));\r\n\tconst time = Date.now();\r\n\r\n\tset(newQuestionRef, { userId, username, content, time });\r\n};\r\n\r\nconst delQuestion = (roomId, questionKey) => {\r\n\tconst delQuestionRef = getMainRef(`rooms/${roomId}/questions/${questionKey}`);\r\n\tset(delQuestionRef, null);\r\n};\r\n\r\nconst addUsersHandsUp = (roomId, questionKey, userId) => {\r\n\tconst newUsersHandsUpRef = push(getMainRef(`rooms/${roomId}/questions/${questionKey}/usersHandsUp`));\r\n\tset(newUsersHandsUpRef, userId);\r\n};\r\n\r\nconst removeUsersHandsUp = (roomId, questionKey, usersHandsUpKey) => {\r\n\tconst delUsersHandsUpRef = getMainRef(`rooms/${roomId}/questions/${questionKey}/usersHandsUp/${usersHandsUpKey}`);\r\n\tset(delUsersHandsUpRef, null);\r\n};\r\n\r\nconst changeUsername = (roomId, questionsKey, username, callback) => {\r\n\tconst roomsRef = getMainRef(\"rooms/\" + roomId);\r\n\tlet updates = {};\r\n\tquestionsKey.forEach(questionKey => {\r\n\t\tupdates[\"/questions/\" + questionKey + \"/username\"] = username;\r\n\t});\r\n\r\n\tupdate(roomsRef, updates).then(() => {\r\n\t\tcallback();\r\n\t});\r\n};\r\n\r\nconst loadAllQuestion = (roomId, callback) => {\r\n\tconst roomsRef = getMainRef(\"rooms/\" + roomId + \"/questions\");\r\n\tonValue(roomsRef, snapshot => {\r\n\t\tlet questions = [];\r\n\t\tsnapshot.forEach(childSnapshot => {\r\n\t\t\tconst key = childSnapshot.key;\r\n\t\t\tlet { userId, username, content, usersHandsUp, time } = childSnapshot.val();\r\n\r\n\t\t\tlet tempArr = [];\r\n\t\t\tif(usersHandsUp)\r\n\t\t\t\tObject.entries(usersHandsUp).forEach(([key, userId]) => tempArr.push({ key, userId }));\r\n\t\t\tusersHandsUp = tempArr;\r\n\r\n\t\t\tconst timeObj = new Date(time);\r\n\t\t\ttime = dateToTimeString(timeObj);\r\n\r\n\t\t\tquestions.push({ key, userId, username, content, usersHandsUp, time });\r\n\t\t});\r\n\r\n\t\tconst onRoomDeleted = (roomId, callback) => {\r\n\t\t\tconst roomsRef = getMainRef(\"rooms\");\r\n\t\t\tonChildRemoved(roomsRef, snapshot => {\r\n\t\t\t\tif(snapshot.key == roomId) callback();\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tcallback({ questions, onRoomDeleted });\r\n\t});\r\n};\r\n\r\n/*const events = {\r\n\tonRoomDeleted: (roomId, callback) => {\r\n\t\tconst roomsRef = getMainRef(\"rooms\");\r\n\t\tonChildRemoved(roomsRef, snapshot => {\r\n\t\t\tif(snapshot.key == roomId) callback();\r\n\t\t})\r\n\t}\r\n};*/\r\n\r\nexport default {\r\n\tlogin,\r\n\tlogout,\r\n\tnewRoom,\r\n\tdeleteRoom,\r\n\tloadAllQuestion,\r\n\tpushQuestion,\r\n\taddUsersHandsUp,\r\n\tremoveUsersHandsUp,\r\n\tchangeUsername\r\n};\r\n"]},"metadata":{},"sourceType":"module"}