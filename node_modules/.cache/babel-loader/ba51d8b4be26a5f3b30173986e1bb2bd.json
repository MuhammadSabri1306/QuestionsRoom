{"ast":null,"code":"import \"core-js/modules/es.array.find-index.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ButtonHandsUp from './ButtonHandsUp.vue';\nexport default {\n  name: 'QuestionCard',\n  components: {\n    ButtonHandsUp: ButtonHandsUp\n  },\n  props: {\n    question: Object,\n    loggedUserId: String,\n    isMine: Boolean\n  },\n  computed: {\n    isHandsUp: function isHandsUp() {\n      var _this = this;\n\n      return this.question.usersHandsUp.findIndex(function (user) {\n        return user.userId == _this.loggedUserId;\n      }) >= 0;\n    }\n  },\n  methods: {\n    toggleIsHandsUp: function toggleIsHandsUp(newVal) {\n      this.$parent.$parent.changeUsersHandsUp(this.question.key, newVal);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;AAYA;AAEA;AACAA,sBADA;AAEAC;AACAC;AADA,GAFA;AAKAC;AACAC,oBADA;AAEAC,wBAFA;AAGAC;AAHA,GALA;AAUAC;AACAC;AAAA;;AACA;AAAA;AAAA;AACA;AAHA,GAVA;AAeAC;AACAC,mBADA,2BACAC,MADA,EACA;AACA;AACA;AAHA;AAfA","names":["name","components","ButtonHandsUp","props","question","loggedUserId","isMine","computed","isHandsUp","methods","toggleIsHandsUp","newVal"],"sourceRoot":"src/components","sources":["QuestionCard.vue"],"sourcesContent":["<template>\r\n\t<div class=\"question-card position-relative bg-white text-dark border rounded shadow py-2 px-3 mx-4 my-2\" :class=\"{ 'is-mine': isMine }\">\r\n\t\t<p class=\"question-username\">@{{ question.username }}</p>\r\n\t\t<p class=\"question-content\">{{ question.content }}</p>\r\n\t\t<div class=\"d-flex align-items-center\">\r\n\t\t\t<ButtonHandsUp v-if=\"!isMine\" :isHandsUp=\"isHandsUp\" />\r\n\t\t\t<p class=\"question-time ms-auto\">at {{ question.time }}</p>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport ButtonHandsUp from './ButtonHandsUp.vue';\r\n\r\nexport default {\r\n\tname: 'QuestionCard',\r\n\tcomponents: {\r\n\t\tButtonHandsUp\r\n\t},\r\n\tprops: {\r\n\t\tquestion: Object,\r\n\t\tloggedUserId: String,\r\n\t\tisMine: Boolean\r\n\t},\r\n\tcomputed: {\r\n\t\tisHandsUp: function(){\r\n\t\t\treturn this.question.usersHandsUp.findIndex(user => user.userId == this.loggedUserId) >= 0;\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\ttoggleIsHandsUp(newVal){\r\n\t\t\tthis.$parent.$parent.changeUsersHandsUp(this.question.key, newVal);\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}