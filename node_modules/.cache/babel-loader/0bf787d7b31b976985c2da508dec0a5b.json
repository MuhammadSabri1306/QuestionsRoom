{"ast":null,"code":"import \"core-js/modules/es.array.find-index.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ButtonHandsUp from './ButtonHandsUp.vue';\nexport default {\n  name: 'QuestionCard',\n  components: {\n    ButtonHandsUp: ButtonHandsUp\n  },\n  props: {\n    question: Object,\n    loggedUserId: String\n  },\n  data: function data() {\n    return {\n      isHandsUp: false\n    };\n  },\n  computed: {\n    isMine: function isMine() {\n      return this.question.userId == this.loggedUserId;\n    },\n    numUsersHandsUp: function numUsersHandsUp() {\n      return this.question.usersHandsUp.length;\n    }\n  },\n  methods: {\n    toggleIsHandsUp: function toggleIsHandsUp(newVal) {\n      this.$parent.$parent.changeUsersHandsUp(this.question.key, newVal);\n    }\n  },\n  watch: {\n    question: {\n      handler: function handler(question) {\n        var _this = this;\n\n        this.isHandsUp = question.usersHandsUp.findIndex(function (user) {\n          return user.userId == _this.loggedUserId;\n        }) >= 0;\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAeA;AAEA;AACAA,sBADA;AAEAC;AACAC;AADA,GAFA;AAKAC;AACAC,oBADA;AAEAC;AAFA,GALA;AASAC,MATA,kBASA;AACA;AACAC;AADA;AAGA,GAbA;AAcAC;AACAC;AACA;AACA,KAHA;AAIAC;AACA;AACA;AANA,GAdA;AAsBAC;AACAC,mBADA,2BACAC,MADA,EACA;AACA;AACA;AAHA,GAtBA;AA2BAC;AACAV;AACAW,aADA,mBACAX,QADA,EACA;AAAA;;AACA;AAAA;AAAA;AACA,OAHA;AAIAY;AAJA;AADA;AA3BA","names":["name","components","ButtonHandsUp","props","question","loggedUserId","data","isHandsUp","computed","isMine","numUsersHandsUp","methods","toggleIsHandsUp","newVal","watch","handler","deep"],"sourceRoot":"src/components","sources":["QuestionCard.vue"],"sourcesContent":["<template>\r\n\t<div class=\"question-card position-relative bg-white text-dark border rounded shadow py-2 px-3 mx-4 my-2\" :class=\"{ 'is-mine': isMine }\">\r\n\t\t<div class=\"position-absolute top-0 end-0 p-4\">\r\n\t\t\t<button type=\"button\" class=\"btn reset-focus-shadow\"><i class=\"fas fa-times\"></i></button>\r\n\t\t</div>\r\n\t\t<p class=\"question-username\">@{{ question.username }}</p>\r\n\t\t<p class=\"question-content\">{{ question.content }}</p>\r\n\t\t<div class=\"d-flex align-items-center\">\r\n\t\t\t<ButtonHandsUp :isMine=\"isMine\" :isHandsUp=\"isHandsUp\" :count=\"numUsersHandsUp\" />\r\n\t\t\t<p class=\"question-time ms-auto\">at {{ question.time }}</p>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport ButtonHandsUp from './ButtonHandsUp.vue';\r\n\r\nexport default {\r\n\tname: 'QuestionCard',\r\n\tcomponents: {\r\n\t\tButtonHandsUp\r\n\t},\r\n\tprops: {\r\n\t\tquestion: Object,\r\n\t\tloggedUserId: String\r\n\t},\r\n\tdata(){\r\n\t\treturn {\r\n\t\t\tisHandsUp: false\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\tisMine: function(){\r\n\t\t\treturn this.question.userId == this.loggedUserId;\r\n\t\t},\r\n\t\tnumUsersHandsUp: function(){\r\n\t\t\treturn this.question.usersHandsUp.length;\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\ttoggleIsHandsUp(newVal){\r\n\t\t\tthis.$parent.$parent.changeUsersHandsUp(this.question.key, newVal);\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\tquestion: {\r\n\t\t\thandler(question){\r\n\t\t\t\tthis.isHandsUp = question.usersHandsUp.findIndex(user => user.userId == this.loggedUserId) >= 0;\r\n\t\t\t},\r\n\t\t\tdeep: true\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n\r\n<style>\r\n.question-card.is-mine {\r\n\tbackground-color: #a1b5ac!important;\r\n\tborder-color: #8c938f!important;\r\n}\r\n\r\n.question-card .question-username,\r\n.question-card .question-time {\r\n\tmargin: .25rem 0;\r\n}\r\n\r\n.question-card .question-username {\r\n\tfont-weight: 800;\r\n\tfont-size: .75em;\r\n}\r\n\r\n.question-card .question-time {\r\n\tfont-weight: 600;\r\n}\r\n\r\n.question-card .question-content {\r\n\tmargin-left: 1rem;\r\n}\r\n\r\n.question-card .block-circle {\r\n\theight: 2.5em;\r\n\twidth: 2.5em;\r\n\tborder-radius: 50%;\r\n}\r\n\r\n.question-card button {\r\n\tpadding: 0;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tbackground-color: transparent;\r\n\tcolor: #6c6c6c;\r\n\tfont-size: 1.5em;\r\n\tmargin: 0;\r\n\ttransition: margin .3s;\r\n}\r\n\r\n.question-card button:hover,\r\n.question-card button:active {\r\n\tcolor: #89121d;\r\n\tmargin: -3px 3px 3px 0;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}