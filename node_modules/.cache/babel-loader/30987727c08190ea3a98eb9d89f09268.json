{"ast":null,"code":"import _slicedToArray from \"F:/Dev/VueProjects/questions-room/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, signOut, GoogleAuthProvider } from \"firebase/auth\";\nimport { getDatabase, ref, push, set, update, onValue, onChildAdded, onChildRemoved } from \"firebase/database\";\nimport firebaseConfig from \"./firebase-config\";\ninitializeApp(firebaseConfig);\n\nvar dateToTimeString = function dateToTimeString(date) {\n  var hours = date.getHours().toString(),\n      minutes = date.getMinutes().toString();\n  if (hours.length < 2) hours = \"0\" + hours;\n  if (minutes.length < 2) minutes = \"0\" + minutes;\n  return hours + \".\" + minutes;\n};\n\nvar getMainRef = function getMainRef(path) {\n  var db = getDatabase();\n  return ref(db, path);\n};\n\nvar login = function login(callback) {\n  var provider = new GoogleAuthProvider(),\n      auth = getAuth();\n  provider.setCustomParameters({\n    prompt: \"select_account\"\n  });\n  signInWithPopup(auth, provider).then(function (result) {\n    return callback(result.user);\n  }).catch(function (error) {\n    return console.error(\"Error Code: \".concat(error.code, \"\\n\").concat(error.message));\n  });\n};\n\nvar logout = function logout(callback) {\n  var auth = getAuth();\n  signOut(auth).then(callback);\n};\n\nvar newRoom = function newRoom(roomName, callback) {\n  var newRoomRef = push(getMainRef(\"rooms\"));\n  var value = {\n    roomId: newRoomRef.key,\n    roomName: roomName\n  };\n  /*const onRoomDeleted = events.onRoomDeleted,\r\n  \tonQuestionAdded = events.onQuestionAdded,\r\n  \tonQuestionRemoved = events.onQuestionRemoved;*/\n\n  set(newRoomRef, {\n    roomName: roomName\n  }).then(function () {\n    callback({\n      value: value\n    });\n  }).catch(function (error) {\n    return console.log(\"Firebase error code: \".concat(error.code, \"\\n\").concat(error.message));\n  });\n};\n\nvar deleteRoom = function deleteRoom(roomId) {\n  var delRoomRef = getMainRef(\"rooms/\" + roomId);\n  set(delRoomRef, null);\n};\n\nvar pushQuestion = function pushQuestion(roomId, userId, username, content) {\n  var newQuestionRef = push(getMainRef(\"rooms/\".concat(roomId, \"/questions\")));\n  var time = Date.now();\n  set(newQuestionRef, {\n    userId: userId,\n    username: username,\n    content: content,\n    time: time\n  });\n};\n\nvar addUsersHandsUp = function addUsersHandsUp(roomId, questionKey, userId) {\n  var newUsersHandsUpRef = push(getMainRef(\"rooms/\".concat(roomId, \"/questions/\").concat(questionKey, \"/usersHandsUp\")));\n  set(newUsersHandsUpRef, userId);\n};\n\nvar removeUsersHandsUp = function removeUsersHandsUp(roomId, questionKey, usersHandsUpKey) {\n  var delUsersHandsUpRef = getMainRef(\"rooms/\".concat(roomId, \"/questions/\").concat(questionKey, \"/usersHandsUp/\").concat(usersHandsUpKey));\n  set(delUsersHandsUpRef, null);\n};\n\nvar changeUsername = function changeUsername(roomId, questionsKey, username) {\n  var roomsRef = getMainRef(\"rooms/\" + roomId);\n  var updates = {};\n  questionsKey.forEach(function (questionKey) {\n    updates[\"/questions/\" + questionKey + \"/username\"] = username;\n  });\n  update(roomsRef, updates);\n};\n\nvar loadAllQuestionOnce = function loadAllQuestionOnce(roomId, callback) {\n  var onRoomDeleted = events.onRoomDeleted,\n      onQuestionAdded = events.onQuestionAdded,\n      onQuestionRemoved = events.onQuestionRemoved;\n  callback({\n    onRoomDeleted: onRoomDeleted,\n    onQuestionAdded: onQuestionAdded,\n    onQuestionRemoved: onQuestionRemoved\n  });\n};\n\nvar onQuestionsChanged = function onQuestionsChanged(roomId, callback) {\n  var questionsRef = getMainRef(\"rooms/\" + roomId + \"/questions\");\n  onValue(questionsRef, function (snapshot) {\n    var questions = [];\n    snapshot.forEach(function (childSnapshot) {\n      var key = childSnapshot.key;\n\n      var _childSnapshot$val = childSnapshot.val(),\n          userId = _childSnapshot$val.userId,\n          username = _childSnapshot$val.username,\n          content = _childSnapshot$val.content,\n          usersHandsUp = _childSnapshot$val.usersHandsUp,\n          time = _childSnapshot$val.time;\n\n      var tempArr = [];\n      if (usersHandsUp) Object.entries(usersHandsUp).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            userId = _ref2[1];\n\n        return tempArr.push({\n          key: key,\n          userId: userId\n        });\n      });\n      usersHandsUp = tempArr;\n      var timeObj = new Date(time);\n      time = dateToTimeString(timeObj);\n      questions.push({\n        key: key,\n        userId: userId,\n        username: username,\n        content: content,\n        usersHandsUp: usersHandsUp,\n        time: time\n      });\n    });\n    callback(questions);\n  });\n};\n\nvar events = {\n  onRoomDeleted: function onRoomDeleted(roomId, callback) {\n    var roomsRef = getMainRef(\"rooms\");\n    onChildRemoved(roomsRef, function (snapshot) {\n      if (snapshot.key == roomId) callback();\n    });\n  },\n  onQuestionAdded: function onQuestionAdded(roomId, callback) {\n    var questionsRef = getMainRef(\"rooms/\".concat(roomId, \"/questions\"));\n    onChildAdded(questionsRef, function (snapshot) {\n      var key = snapshot.key;\n\n      var _snapshot$val = snapshot.val(),\n          userId = _snapshot$val.userId,\n          username = _snapshot$val.username,\n          content = _snapshot$val.content,\n          usersHandsUp = _snapshot$val.usersHandsUp,\n          time = _snapshot$val.time;\n\n      var tempArr = [];\n      if (usersHandsUp) Object.entries(usersHandsUp).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            key = _ref4[0],\n            userId = _ref4[1];\n\n        return tempArr.push({\n          key: key,\n          userId: userId\n        });\n      });\n      usersHandsUp = tempArr;\n      var timeObj = new Date(time);\n      time = dateToTimeString(timeObj);\n      var onQuestionChildChanged = events.onQuestionChildChanged,\n          onUsersHandsUpChanged = events.onUsersHandsUpChanged,\n          question = {\n        key: key,\n        userId: userId,\n        username: username,\n        content: content,\n        usersHandsUp: usersHandsUp,\n        time: time\n      };\n      callback({\n        question: question,\n        onQuestionChildChanged: onQuestionChildChanged,\n        onUsersHandsUpChanged: onUsersHandsUpChanged\n      });\n    });\n  },\n  onQuestionRemoved: function onQuestionRemoved(roomId, callback) {\n    var questionsRef = getMainRef(\"rooms/\".concat(roomId, \"/questions\"));\n    onChildRemoved(questionsRef, function (snapshot) {\n      callback(snapshot.key);\n    });\n  },\n  onQuestionChildChanged: function onQuestionChildChanged(roomId, questionKey, callback) {\n    var questionItemRef = getMainRef(\"rooms/\".concat(roomId, \"/questions/\").concat(questionKey));\n    onValue(questionItemRef, function (snapshot) {\n      var key = snapshot.key;\n\n      var _snapshot$val2 = snapshot.val(),\n          userId = _snapshot$val2.userId,\n          username = _snapshot$val2.username,\n          content = _snapshot$val2.content,\n          usersHandsUp = _snapshot$val2.usersHandsUp,\n          time = _snapshot$val2.time;\n\n      var tempArr = [];\n      if (usersHandsUp) Object.entries(usersHandsUp).forEach(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            key = _ref6[0],\n            userId = _ref6[1];\n\n        return tempArr.push({\n          key: key,\n          userId: userId\n        });\n      });\n      usersHandsUp = tempArr;\n      var timeObj = new Date(time);\n      time = dateToTimeString(timeObj);\n      callback({\n        key: key,\n        userId: userId,\n        username: username,\n        content: content,\n        usersHandsUp: usersHandsUp,\n        time: time\n      });\n    });\n  },\n  onUsersHandsUpChanged: function onUsersHandsUpChanged(roomId, questionKey, callback) {\n    var usersHandsUpRef = getMainRef(\"rooms/\".concat(roomId, \"/questions/\").concat(questionKey, \"/usersHandsUp\"));\n    onValue(usersHandsUpRef, function (snapshot) {\n      var usersHandsUp = [];\n      snapshot.forEach(function (childSnapshot) {\n        var key = childSnapshot.key,\n            userId = childSnapshot.val();\n        usersHandsUp.push({\n          key: key,\n          userId: userId\n        });\n      });\n      callback(questionKey, usersHandsUp);\n    });\n  }\n};\nexport default {\n  login: login,\n  logout: logout,\n  newRoom: newRoom,\n  deleteRoom: deleteRoom,\n  onQuestionsChanged: onQuestionsChanged,\n  pushQuestion: pushQuestion,\n  addUsersHandsUp: addUsersHandsUp,\n  removeUsersHandsUp: removeUsersHandsUp,\n  changeUsername: changeUsername,\n  loadAllQuestionOnce: loadAllQuestionOnce\n};","map":{"version":3,"sources":["F:/Dev/VueProjects/questions-room/src/services/firebase.js"],"names":["initializeApp","getAuth","signInWithPopup","signOut","GoogleAuthProvider","getDatabase","ref","push","set","update","onValue","onChildAdded","onChildRemoved","firebaseConfig","dateToTimeString","date","hours","getHours","toString","minutes","getMinutes","length","getMainRef","path","db","login","callback","provider","auth","setCustomParameters","prompt","then","result","user","catch","error","console","code","message","logout","newRoom","roomName","newRoomRef","value","roomId","key","log","deleteRoom","delRoomRef","pushQuestion","userId","username","content","newQuestionRef","time","Date","now","addUsersHandsUp","questionKey","newUsersHandsUpRef","removeUsersHandsUp","usersHandsUpKey","delUsersHandsUpRef","changeUsername","questionsKey","roomsRef","updates","forEach","loadAllQuestionOnce","onRoomDeleted","events","onQuestionAdded","onQuestionRemoved","onQuestionsChanged","questionsRef","snapshot","questions","childSnapshot","val","usersHandsUp","tempArr","Object","entries","timeObj","onQuestionChildChanged","onUsersHandsUpChanged","question","questionItemRef","usersHandsUpRef"],"mappings":"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","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth, signInWithPopup, signOut, GoogleAuthProvider } from \"firebase/auth\";\r\nimport { getDatabase, ref, push, set, update, onValue, onChildAdded, onChildRemoved } from \"firebase/database\";\r\nimport firebaseConfig from \"./firebase-config\";\r\n\r\ninitializeApp(firebaseConfig);\r\n\r\nconst dateToTimeString = date => {\r\n\tlet hours = date.getHours().toString(),\r\n\t\tminutes = date.getMinutes().toString();\r\n\r\n\tif(hours.length < 2) hours = \"0\" + hours;\r\n\tif(minutes.length < 2) minutes = \"0\" + minutes;\r\n\r\n\treturn hours + \".\" + minutes;\r\n};\r\n\r\nconst getMainRef = path => {\r\n\tconst db = getDatabase();\r\n\treturn ref(db, path);\r\n};\r\n\r\nconst login = callback => {\r\n\tconst provider = new GoogleAuthProvider(),\r\n\t\tauth = getAuth();\r\n\r\n\tprovider.setCustomParameters({\r\n\t\tprompt: \"select_account\"\r\n\t});\r\n\r\n\tsignInWithPopup(auth, provider)\r\n\t\t.then(result => callback(result.user))\r\n\t\t.catch(error => console.error(`Error Code: ${error.code}\\n${error.message}`));\r\n};\r\n\r\nconst logout = callback => {\r\n\tconst auth = getAuth();\r\n\tsignOut(auth).then(callback);\r\n};\r\n\r\nconst newRoom = (roomName, callback) => {\r\n\tconst newRoomRef = push(getMainRef(\"rooms\"));\r\n\tconst value = { roomId: newRoomRef.key, roomName };\r\n\r\n\t/*const onRoomDeleted = events.onRoomDeleted,\r\n\t\tonQuestionAdded = events.onQuestionAdded,\r\n\t\tonQuestionRemoved = events.onQuestionRemoved;*/\r\n\r\n\tset(newRoomRef, { roomName })\r\n\t\t.then(() => {\r\n\t\t\tcallback({ value });\r\n\t\t}).catch(error => console.log(`Firebase error code: ${error.code}\\n${error.message}`));\r\n\t\t\t\r\n};\r\n\r\nconst deleteRoom = roomId => {\r\n\tconst delRoomRef = getMainRef(\"rooms/\" + roomId);\r\n\tset(delRoomRef, null);\r\n};\r\n\r\nconst pushQuestion = (roomId, userId, username, content) => {\r\n\tconst newQuestionRef = push(getMainRef(`rooms/${roomId}/questions`));\r\n\tconst time = Date.now();\r\n\r\n\tset(newQuestionRef, { userId, username, content, time });\r\n};\r\n\r\nconst addUsersHandsUp = (roomId, questionKey, userId) => {\r\n\tconst newUsersHandsUpRef = push(getMainRef(`rooms/${roomId}/questions/${questionKey}/usersHandsUp`));\r\n\tset(newUsersHandsUpRef, userId);\r\n};\r\n\r\nconst removeUsersHandsUp = (roomId, questionKey, usersHandsUpKey) => {\r\n\tconst delUsersHandsUpRef = getMainRef(`rooms/${roomId}/questions/${questionKey}/usersHandsUp/${usersHandsUpKey}`);\r\n\tset(delUsersHandsUpRef, null);\r\n};\r\n\r\nconst changeUsername = (roomId, questionsKey, username) => {\r\n\tconst roomsRef = getMainRef(\"rooms/\" + roomId);\r\n\tlet updates = {};\r\n\tquestionsKey.forEach(questionKey => {\r\n\t\tupdates[\"/questions/\" + questionKey + \"/username\"] = username;\r\n\t});\r\n\r\n\tupdate(roomsRef, updates);\r\n};\r\n\r\nconst loadAllQuestionOnce = (roomId, callback) => {\r\n\tconst onRoomDeleted = events.onRoomDeleted,\r\n\t\tonQuestionAdded = events.onQuestionAdded,\r\n\t\tonQuestionRemoved = events.onQuestionRemoved;\r\n\r\n\tcallback({ onRoomDeleted, onQuestionAdded, onQuestionRemoved });\r\n};\r\n\r\nconst onQuestionsChanged = (roomId, callback) => {\r\n\tconst questionsRef = getMainRef(\"rooms/\" + roomId + \"/questions\");\r\n\tonValue(questionsRef, snapshot => {\r\n\t\tlet questions = [];\r\n\t\tsnapshot.forEach(childSnapshot => {\r\n\t\t\tconst key = childSnapshot.key;\r\n\t\t\tlet { userId, username, content, usersHandsUp, time } = childSnapshot.val();\r\n\r\n\t\t\tlet tempArr = [];\r\n\t\t\tif(usersHandsUp)\r\n\t\t\t\tObject.entries(usersHandsUp).forEach(([key, userId]) => tempArr.push({ key, userId }));\r\n\t\t\tusersHandsUp = tempArr;\r\n\r\n\t\t\tconst timeObj = new Date(time);\r\n\t\t\ttime = dateToTimeString(timeObj);\r\n\r\n\t\t\tquestions.push({ key, userId, username, content, usersHandsUp, time });\r\n\t\t});\r\n\r\n\t\tcallback(questions);\r\n\t});\r\n}\r\n\r\nconst events = {\r\n\tonRoomDeleted: (roomId, callback) => {\r\n\t\tconst roomsRef = getMainRef(\"rooms\");\r\n\t\tonChildRemoved(roomsRef, snapshot => {\r\n\t\t\tif(snapshot.key == roomId) callback();\r\n\t\t})\r\n\t},\r\n\tonQuestionAdded: (roomId, callback) => {\r\n\t\tconst questionsRef = getMainRef(`rooms/${roomId}/questions`);\r\n\t\tonChildAdded(questionsRef, snapshot => {\r\n\t\t\tconst key = snapshot.key;\r\n\t\t\tlet { userId, username, content, usersHandsUp, time } = snapshot.val();\r\n\r\n\t\t\tlet tempArr = [];\r\n\t\t\tif(usersHandsUp)\r\n\t\t\t\tObject.entries(usersHandsUp).forEach(([key, userId]) => tempArr.push({ key, userId }));\r\n\t\t\tusersHandsUp = tempArr;\r\n\r\n\t\t\tconst timeObj = new Date(time);\r\n\t\t\ttime = dateToTimeString(timeObj);\r\n\r\n\t\t\tconst onQuestionChildChanged = events.onQuestionChildChanged,\r\n\t\t\t\tonUsersHandsUpChanged = events.onUsersHandsUpChanged,\r\n\t\t\t\tquestion = { key, userId, username, content, usersHandsUp, time };\r\n\r\n\t\t\tcallback({ question, onQuestionChildChanged, onUsersHandsUpChanged });\r\n\t\t});\r\n\t},\r\n\tonQuestionRemoved: (roomId, callback) => {\r\n\t\tconst questionsRef = getMainRef(`rooms/${roomId}/questions`);\r\n\t\tonChildRemoved(questionsRef, snapshot => {\r\n\t\t\tcallback(snapshot.key);\r\n\t\t});\r\n\t},\r\n\tonQuestionChildChanged: (roomId, questionKey, callback) => {\r\n\t\tconst questionItemRef = getMainRef(`rooms/${roomId}/questions/${questionKey}`);\r\n\t\tonValue(questionItemRef, snapshot => {\r\n\t\t\tconst key = snapshot.key;\r\n\t\t\tlet { userId, username, content, usersHandsUp, time } = snapshot.val();\r\n\r\n\t\t\tlet tempArr = [];\r\n\t\t\tif(usersHandsUp)\r\n\t\t\t\tObject.entries(usersHandsUp).forEach(([key, userId]) => tempArr.push({ key, userId }));\r\n\t\t\tusersHandsUp = tempArr;\r\n\r\n\t\t\tconst timeObj = new Date(time);\r\n\t\t\ttime = dateToTimeString(timeObj);\r\n\r\n\t\t\tcallback({ key, userId, username, content, usersHandsUp, time });\r\n\t\t});\r\n\t},\r\n\tonUsersHandsUpChanged: (roomId, questionKey, callback) => {\r\n\t\tconst usersHandsUpRef = getMainRef(`rooms/${roomId}/questions/${questionKey}/usersHandsUp`);\r\n\t\tonValue(usersHandsUpRef, snapshot => {\r\n\t\t\tlet usersHandsUp = [];\r\n\t\t\tsnapshot.forEach(childSnapshot => {\r\n\t\t\t\tconst key = childSnapshot.key,\r\n\t\t\t\t\tuserId = childSnapshot.val();\r\n\r\n\t\t\t\tusersHandsUp.push({ key, userId });\r\n\t\t\t});\r\n\r\n\t\t\tcallback(questionKey, usersHandsUp);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default { login, logout, newRoom, deleteRoom, onQuestionsChanged, pushQuestion, addUsersHandsUp, removeUsersHandsUp, changeUsername, loadAllQuestionOnce };\r\n"]},"metadata":{},"sourceType":"module"}