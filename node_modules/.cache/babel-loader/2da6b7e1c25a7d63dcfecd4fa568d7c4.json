{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.map.js\";\n\nvar createId = function createId() {\n  var s4 = function s4() {\n    return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n  };\n\n  return s4() + s4() + \"-\" + s4() + s4() + s4() + s4();\n};\n\nvar createEmptyDataRoom = function createEmptyDataRoom() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var data = {\n    room: {\n      id: \"\",\n      name: \"\"\n    },\n    loggedUser: {\n      userId: \"\",\n      isAdmin: false,\n      username: \"\",\n      email: \"\"\n    },\n    questions: []\n  };\n  if (params === null) return data;\n  data.room.id = createId();\n  data.room.name = params.roomName;\n  data.loggedUser.userId = params.userId;\n  data.loggedUser.isAdmin = true;\n  data.loggedUser.username = params.username;\n  data.loggedUser.email = params.email;\n  data.questions[createId()] = createQuestionsItem(\"Sabri\", \"1\", \"Test\");\n  return data;\n};\n\nvar createQuestionsItem = function createQuestionsItem(username, userId, content) {\n  return {\n    username: username,\n    userId: userId,\n    content: content,\n    isHandsUp: false,\n    time: Date.now()\n  };\n};\n\nexport default {\n  newRoom: function newRoom(params) {\n    return createEmptyDataRoom(params);\n  },\n  deleteRoom: function deleteRoom() {\n    return createEmptyDataRoom();\n  },\n  changeUsername: function changeUsername(srcData, username, userId, callback) {\n    srcData.loggedUser.username = username;\n    srcData.questions = srcData.questions.map(function (item) {\n      if (item.userId == userId) item.username = username;\n      return item;\n    });\n    callback(srcData);\n  },\n  changeEmail: function changeEmail(srcData, email, userId, callback) {\n    srcData.loggedUser.email = email;\n    srcData.questions = srcData.questions.map(function (item) {\n      if (item.userId == userId) item.email = email;\n      return item;\n    });\n    callback(srcData);\n  },\n  pushQuestion: function pushQuestion(srcData, username, userId, content, callback) {\n    srcData.questions.push(createQuestionsItem(username, userId, content));\n    callback(srcData);\n  }\n};","map":{"version":3,"sources":["F:/Dev/VueProjects/questions-room/src/services/firebase.js"],"names":["createId","s4","Math","random","toString","substring","createEmptyDataRoom","params","data","room","id","name","loggedUser","userId","isAdmin","username","email","questions","roomName","createQuestionsItem","content","isHandsUp","time","Date","now","newRoom","deleteRoom","changeUsername","srcData","callback","map","item","changeEmail","pushQuestion","push"],"mappings":"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","sourcesContent":["const createId = () => {\r\n\tconst s4 = () => (((1 + Math.random()) * 0x10000)|0).toString(16).substring(1);\r\n\treturn s4() + s4() + \"-\" + s4() + s4() + s4() + s4();\r\n};\r\n\r\nconst createEmptyDataRoom = (params = null) => {\r\n\tconst data = {\r\n\t\troom: {\r\n\t\t\tid: \"\",\r\n\t\t\tname: \"\"\r\n\t\t},\r\n\t\tloggedUser: {\r\n\t\t\tuserId: \"\",\r\n\t\t\tisAdmin: false,\r\n\t\t\tusername: \"\",\r\n\t\t\temail: \"\"\r\n\t\t},\r\n\t\tquestions: []\r\n\t};\r\n\r\n\tif(params === null) return data;\r\n\r\n\tdata.room.id = createId();\r\n\tdata.room.name = params.roomName;\r\n\tdata.loggedUser.userId = params.userId;\r\n\tdata.loggedUser.isAdmin = true;\r\n\tdata.loggedUser.username = params.username;\r\n\tdata.loggedUser.email = params.email;\r\n\tdata.questions[createId()] = createQuestionsItem(\"Sabri\", \"1\", \"Test\");\r\n\treturn data;\r\n};\r\n\r\nconst createQuestionsItem = (username, userId, content) => {\r\n\treturn {\r\n\t\tusername: username,\r\n\t\tuserId: userId,\r\n\t\tcontent: content,\r\n\t\tisHandsUp: false,\r\n\t\ttime: Date.now()\r\n\t};\r\n};\r\n\r\nexport default {\r\n\tnewRoom: params => {\r\n\t\treturn createEmptyDataRoom(params);\r\n\t},\r\n\tdeleteRoom: () => {\r\n\t\treturn createEmptyDataRoom();\r\n\t},\r\n\tchangeUsername: (srcData, username, userId, callback) => {\r\n\t\tsrcData.loggedUser.username = username;\r\n\t\tsrcData.questions = srcData.questions.map(item => {\r\n\t\t\tif(item.userId == userId) item.username = username;\r\n\t\t\treturn item;\r\n\t\t});\r\n\r\n\t\tcallback(srcData);\r\n\t},\r\n\tchangeEmail: (srcData, email, userId, callback) => {\r\n\t\tsrcData.loggedUser.email = email;\r\n\t\tsrcData.questions = srcData.questions.map(item => {\r\n\t\t\tif(item.userId == userId) item.email = email;\r\n\t\t\treturn item;\r\n\t\t});\r\n\r\n\t\tcallback(srcData);\r\n\t},\r\n\tpushQuestion: (srcData, username, userId, content, callback) => {\r\n\t\tsrcData.questions.push(createQuestionsItem(username, userId, content));\r\n\t\tcallback(srcData);\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}